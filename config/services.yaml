parameters:

services:
    _defaults:
        autowire: true
        autoconfigure: true


    App\Adapter\Framework\Http\Controller\:
        resource: '../src/Adapter/Framework/Http/Controller/'
        tags: [ 'controller.service_arguments' ]

    App\Adapter\Framework\Security\Voter\ShoppingCartVoter:
        tags:
            - { name: security.voter }

    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Domain/Model/'
            - '../src/Kernel.php'

    App\Domain\Factory\CompanyFactory:
        public: true

        # Command handlers
    command_handlers:
        namespace: App\Application\Command\
        resource: '../src/Application/Command/**/*Handler.php'
        tags:
            - { name: messenger.message_handler, bus: command.bus }

    # Query handlers
    query_handlers:
        namespace: App\Application\Query\
        resource: '../src/Application/Query/**/*Handler.php'
        tags:
            - { name: messenger.message_handler, bus: query.bus }

    # Event subscribers
    event_subscribers:
        namespace: App\Application\EventSubscriber\
        resource: '../src/Application/EventSubscriber/**/*Subscriber.php'
        tags:
            - { name: messenger.message_handler, bus: event.bus }

    # Let Controllers publicly accessible when not using the AbstractController class
    # User controllers
    App\Adapter\Framework\Http\Controller\User\ActivateUserController:
        public: true
    App\Adapter\Framework\Http\Controller\User\CreateUserController:
        public: true

    # Company controllers
    App\Adapter\Framework\Http\Controller\Company\CreateCompanyController:
        public: true
    App\Adapter\Framework\Http\Controller\Company\AddUserToCompanyController:
        public: true
    App\Adapter\Framework\Http\Controller\Company\UpdateCompanyController:
        public: true
    App\Adapter\Framework\Http\Controller\Company\DeleteCompanyController:
        public: true
    App\Adapter\Framework\Http\Controller\Company\GetCompanyByTaxpayerController:
        public: true
    App\Adapter\Framework\Http\Controller\Company\GetCompanyByIdController:
        public: true


    # Project controllers
    App\Adapter\Framework\Http\Controller\Project\CreateProjectController:
        public: true
    App\Adapter\Framework\Http\Controller\Project\TrackProgressController:
        public: true
    App\Adapter\Framework\Http\Controller\Project\GetAllProjectsController:
        public: true
    App\Adapter\Framework\Http\Controller\Project\GetProjectByIdController:
        public: true
    App\Adapter\Framework\Http\Controller\Project\GetProjectsByStatusController:
        public: true
    App\Adapter\Framework\Http\Controller\Project\GetProjectsByTypeController:
        public: true

    # Certification Authority Controllers
    App\Adapter\Framework\Http\Controller\CertificationAuthority\CreateCertificationAuthorityController:
        public: true
    App\Adapter\Framework\Http\Controller\CertificationAuthority\UpdateCertificationAuthorityController:
        public: true
    App\Adapter\Framework\Http\Controller\CertificationAuthority\GetAllCertificationsAuthorityController:
        public: true
    App\Adapter\Framework\Http\Controller\CertificationAuthority\GetCertificationAuthorityByIdController:
        public: true
    App\Adapter\Framework\Http\Controller\CertificationAuthority\DeleteCertificationAuthorityController:
        public: true

    # Shopping Cart Controllers
    App\Adapter\Framework\Http\Controller\ShoppingCart\AddItemToShoppingCartController:
        public: true
    App\Adapter\Framework\Http\Controller\ShoppingCart\RemoveItemFromShoppingCartController:
        public: true
    App\Adapter\Framework\Http\Controller\ShoppingCart\RemoveAllItemsFromShoppingCartController:
        public: true
    App\Adapter\Framework\Http\Controller\ShoppingCart\UpdateItemQuantityInShoppingCartController:
        public: true
    App\Adapter\Framework\Http\Controller\ShoppingCart\ViewCartSummaryController:
        public: true


    # Event Listeners used to transform the exception into a JSON response
    App\Adapter\Framework\Listener\JsonTransformerExceptionListener:
        tags:
            - { name: kernel.event_listener, event: kernel.exception, method: onKernelException, priority: 100 }

    # JWT Event Listeners used to add custom data to the JWT token
    App\Adapter\Framework\Security\EventListener\JWTCreatedListener:
        tags:
            - { name: kernel.event_listener, event: lexik_jwt_authentication.on_jwt_created, method: onJWTCreated }

    # Doctrine Event Listeners used to hash the password before persisting the user
    App\Adapter\Database\ORM\Doctrine\EventSubscriber\UserEventSubscriber:
        tags:
            - { name: doctrine.event_listener, event: preUpdate, method: preUpdate }

    App\Domain\Security\PasswordHasherInterface:
        class: App\Adapter\Framework\Security\SymfonyPasswordHasher
        public: true

    App\Application\EventHandler\DiscountCodeAppliedHandler:
        arguments:
            - '@App\Domain\Repository\ShoppingCartRepositoryInterface'
            - '@App\Domain\Repository\DiscountRepositoryInterface'
            - '@logger'
        tags:
            - { name: 'app.event_handler', event: 'App\Domain\Event\DiscountCodeApplied' }

    App\Domain\Event\DomainEventDispatcherInterface: '@App\Adapter\Framework\Event\SymfonyDomainEventDispatcher'



    App\Tests\Subscriber\ShoppingCartEventSubscriber:
        public: true
        tags:
            - { name: kernel.event_subscriber }
